name: Legacy_Admin_Build
run-name: "Legacy Admin Deployment (${{  github.event.inputs.environment }}, ${{  github.event.inputs.market }}, BE: ${{  github.event.inputs.legacy_branch }} }})"
on:
  workflow_dispatch:
    inputs:
      legacy_branch:
        description: 'Legacy Branch'     
        required: true
        default: 'master'
      environment:
        description: 'Environment'
        required: true
        default: 'dev' 
        type: choice
        options:
        - dev
        - int
        - uat
        - prd
      market:
        description: 'Market'
        required: true
        default: 'nl' 
        type: choice
        options:
        - jp
        - kr
      region:
        description: 'Region'
        required: true
        default: 'southeastasia' 
        type: choice
        options:
        - southeastasia
      auto_deploy:
        description: 'Auto-Deploy'
        required: true
        type: boolean
        default: false

jobs:
  ci:
    name: CI
    uses: abeyrathne8887/WebApplication1/.github/workflows/CI.yml@master
    with:
      branch: "${{ github.event.inputs.legacy_branch }}"
    secrets:
      GH_AUTH_TOKEN: ${{ secrets.GH_AUTH_TOKEN}}
      
  build:
    needs: [ ci ]
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
      with:
        ref: "${{inputs.legacy_branch}}"
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.2.0
      with:
        nuget-version: latest
        
    - name: Navigate to Workspace
      run: cd $GITHUB_WORKSPACE

    - name: Create Build Directory
      run: mkdir _build
      
    - name: Restore Packages
      run: nuget restore WebApplication1.sln
    
    - name: Build Solution
      run: |
        msbuild.exe WebApplication1/WebApplication1.csproj /p:PublishProfile=Publish /restore /p:outdir="output" 
        echo "${{ needs.ci.outputs.version }}"
        echo "${{ needs.ci.outputs.version }}" >> WebApplication1/output/_PublishedWebsites/WebApplication1/version.text
        
    - uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: WebApplication1/output/_PublishedWebsites/WebApplication1/
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
  
      